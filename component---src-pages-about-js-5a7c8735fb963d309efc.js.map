{"version":3,"sources":["webpack:///./src/components/AboutMe.js","webpack:///./src/pages/about.js","webpack:///./src/components/image.js"],"names":["AboutMe","useState","isShort","setShort","now","Date","deathDay","daysTillDeath","Math","round","abs","ToggleBtn","style","marginBottom","onClick","imgName","About","render","this","props","data","site","siteMetadata","social","siteTitle","title","Layout","location","keywords","marginTop","href","twitter","github","Bio","React","Component","pageQuery","Image","image","useStaticQuery","allImageSharp","edges","find","edge","node","fluid","originalName"],"mappings":"2MA2DeA,MAxDf,WAAoB,IAAD,EACWC,oBAAS,GAA9BC,EADU,KACDC,EADC,KAIXC,EAAMC,KAAKD,MACXE,EAAW,IAAID,KAAK,KAAM,EAAG,IAE7BE,EAAgBC,KAAKC,MAAMD,KAAKE,KAAKN,EAAME,GAJlC,QAMTK,EAAY,kBAChB,oCACE,4BACEC,MAAO,CAAEC,aAAc,OACvBC,QAAS,kBAAMX,GAAUD,KAExBA,EAAU,UAAY,cAK7B,OAAIA,EAEA,oCACE,kBAACS,EAAD,MACA,0FAKJ,oCACE,kBAACA,EAAD,MACA,qoBAYA,+OAGwE,IACtE,gCAASJ,GAJX,mDAQA,kBAAC,IAAD,CAAOQ,QAAQ,sB,oCC7CfC,G,4GACJC,OAAA,WAAU,IAAD,EACUC,KAAKC,MAAdC,KACkCC,KAAKC,aAAvCC,EAFD,EAECA,OAAeC,EAFhB,EAESC,MAEhB,OACE,kBAACC,EAAA,EAAD,CAAQC,SAAUT,KAAKC,MAAMQ,SAAUF,MAAOD,GAC5C,kBAAC,IAAD,CACEC,MAAM,YACNG,SAAU,CAAC,QAAD,iCAEZ,wBAAIhB,MAAO,CAAEiB,UAAW,IAAxB,6BAEA,kBAAC,EAAD,MAEA,4BACE,4BACE,uBAAGC,KAAI,uBAAyBP,EAAOQ,SAAvC,yBAIF,4BACE,uBAAGD,KAAI,sBAAwBP,EAAOS,QAAtC,uBAMJ,kBAACC,EAAA,EAAD,Q,GA5BYC,IAAMC,YAoCbC,GAFEpB,YAEO,e,kCC7CtB,0DAsCeqB,IAvBD,SAAC,GAAiB,IAAftB,EAAc,EAAdA,QAgBTuB,EAfOC,yBAAe,cAeTC,cAAcC,MAAMC,MACrC,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,MAAMC,eAAiB/B,KAG3C,OAAO,kBAAC,IAAD,CAAK8B,MAAOP,EAAMM,KAAKC","file":"component---src-pages-about-js-5a7c8735fb963d309efc.js","sourcesContent":["import React, { useState } from 'react'\nimport Image from './image'\n\nfunction AboutMe() {\n  const [isShort, setShort] = useState(true)\n\n  const oneDay = 24 * 60 * 60 * 1000 // hours*minutes*seconds*milliseconds\n  const now = Date.now()\n  const deathDay = new Date(2057, 2, 22)\n\n  const daysTillDeath = Math.round(Math.abs((now - deathDay) / oneDay))\n\n  const ToggleBtn = () => (\n    <>\n      <button\n        style={{ marginBottom: '1em' }}\n        onClick={() => setShort(!isShort)}\n      >\n        {isShort ? 'longer?' : 'shorter?'}\n      </button>\n    </>\n  )\n\n  if (isShort) {\n    return (\n      <>\n        <ToggleBtn></ToggleBtn>\n        <p>I currently work in Cyber Security building software.ðŸ˜‰â˜•ðŸ’»</p>\n      </>\n    )\n  }\n  return (\n    <>\n      <ToggleBtn></ToggleBtn>\n      <p>\n        Below you will find the best picture ever taken of me. At the time of\n        writing, it's probably 5 years old and maybe by the time of you reading\n        it will be 10 years old. It's entirely possible that I no longer look\n        like the person in that photo. Perhaps I no longer have a face at all.\n        Perhaps my fantasies of becoming a linchpin in the human cyborg black\n        markets has finally come to fruition -- which might afford me the\n        oppurtunity to upload my human consciousness into an electronic vessel\n        to live out the rest of time as a form of artificial intelligence.\n        Perhaps... Wait, why are we here? ... oh yes, about me...\n      </p>\n\n      <p>\n        I'm a software engineer, button masher, musician, maker/breaker of\n        things, technologist, tinkerer, creator, and student of the world. I was\n        born in 1988 (you can do the math) and, if I'm lucky, I will live for{' '}\n        <strong>{daysTillDeath}</strong> more days. Whoa, I guess I better get\n        to work.\n      </p>\n\n      <Image imgName=\"df_headshot.jpg\" />\n    </>\n  )\n}\n\nexport default AboutMe\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport AboutMe from '../components/AboutMe'\nimport Bio from '../components/Bio'\nimport Layout from '../components/Layout'\nimport SEO from '../components/seo'\nimport { rhythm } from '../utils/typography'\n\nclass About extends React.Component {\n  render() {\n    const { data } = this.props\n    const { social, title: siteTitle } = data.site.siteMetadata\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"All posts\"\n          keywords={[`about`, `gatsby`, `javascript`, `react`]}\n        />\n        <h3 style={{ marginTop: 0 }}>Hi, I'm Dustin Firebaugh!</h3>\n\n        <AboutMe />\n\n        <ul>\n          <li>\n            <a href={`https://twitter.com/${social.twitter}`}>\n              Follow me on Twitter\n            </a>\n          </li>\n          <li>\n            <a href={`https://github.com/${social.github}`}>\n              Find me on Github\n            </a>\n          </li>\n        </ul>\n\n        <Bio />\n      </Layout>\n    )\n  }\n}\n\nexport default About\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        social {\n          twitter\n          github\n        }\n      }\n    }\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `useStaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.dev/gatsby-image\n * - `useStaticQuery`: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nconst Image = ({ imgName }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      allImageSharp {\n        edges {\n          node {\n            fluid(maxWidth: 500) {\n              ...GatsbyImageSharpFluid\n              originalName\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const image = data.allImageSharp.edges.find(\n    edge => edge.node.fluid.originalName === imgName\n  )\n\n  return <Img fluid={image.node.fluid} />\n}\n\nexport default Image\n// extension: { regex: \"/jpeg|jpg|png|gif/\"}\n"],"sourceRoot":""}