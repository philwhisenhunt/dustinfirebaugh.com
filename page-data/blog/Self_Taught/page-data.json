{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/Self_Taught/","result":{"data":{"site":{"siteMetadata":{"title":"Dustin Firebaugh","author":"Dustin Firebaugh"}},"mdx":{"id":"393cf5d1-830f-590d-a106-500acd3e332a","excerpt":"Being self taught is not a real thing","frontmatter":{"title":"The Fallacy of the Self Taught Developer","date":"April 03, 2020"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"path\": \"/the_fallacy_of_the_self_taught_developer\",\n  \"date\": \"2020-04-03\",\n  \"title\": \"The Fallacy of the Self Taught Developer\",\n  \"tags\": [\"Self Taught\", \"programming\"],\n  \"excerpt\": \"Being self taught is not a real thing\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\u201CI\\u2019m a self taught developer.\\u201D\"), mdx(\"p\", null, \"I\\u2019ve probably said this myself a few times. However, I\\u2019ve been hovering around this term because it bothers me a bit.  In some sense of the term, we are all \\u201Cself taught developers\\u201D.  Even if you went to school and got a CS degree, you still had to go out and put in the work to fully internalize the process of how to make software.  You had to write code on your own.  There are no real training wheels for this.  You had to make mistakes and through idioms or feedback from others, you corrected.  Is that \\u201Cself taught\\u201D though?\"), mdx(\"p\", null, \"You may hear this proudly stated by many out in the wild.  We wear it as a badge of honor to communicate the weight of our endeavors and accomplishments. Good!  It\\u2019s hard to learn to code.\"), mdx(\"p\", null, \"Looking back at my journey, I consumed tons of content and I relied on several friends and colleagues to help me along the way.  Is that \\u201Cself taught\\u201D?\"), mdx(\"p\", null, \"Perhaps the only self taught programmer was \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Ada_Lovelace\"\n  }), \"Ada Lovelace (the first programmer)\"), \" or the other giants, whose shoulders we stand on, that paved the way.\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://media.giphy.com/media/uBdrbmG9FpQwJpp4m8/giphy.gif\",\n    \"alt\": \"ada\"\n  }))), mdx(\"p\", null, \"Another problem with the term \\u201Cself taught\\u201D is that it might imply that you\\u2019re done.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u201CEmpty Your Cup\\u201D\\n\\u2014 \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://medium.com/jumpstart-your-dream-life/empty-your-cup-a-zen-proverb-on-opening-yourself-to-new-ideas-10e8c9545c7b\"\n  }), \"Zen Proverb\"))), mdx(\"p\", null, \"or\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u201CEmpty your cup so that it may be filled; become devoid to gain totality.\\u201D\\n\\u2014 \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.goodreads.com/quotes/48714-empty-your-cup-so-that-it-may-be-filled-become\"\n  }), \"Bruce Lee\"))), mdx(\"p\", null, \"Positioning yourself as if you already know everything can seriously impact your ability to learn.\"), mdx(\"p\", null, \"Along these lines, I like \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://twitter.com/dan_abramov\"\n  }), \"Dan Abromov\\u2019s\"), \" assertion that \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://youtu.be/E42EEPchKGY\"\n  }), \"we should all be junior developers\"), \".\"), mdx(\"p\", null, \"So in some ways, none of us are \\u201Cself taught\\u201D.  In fact, if you rigorously isolated yourself and attempted to teach yourself how to code, you probably wouldn\\u2019t be all that good.\"), mdx(\"p\", null, \"By doing the hard thing of sharing your code and asking for feedback, you can massively accelerate your growth as a developer and learn from the insights of those that came before you.\"), mdx(\"p\", null, \"I think the notion of \\u201Cself taught developer\\u201D goes against one of the core fundamentals of software development.  i.e. software development is a team sport.\"), mdx(\"p\", null, \"Don\\u2019t go it alone.\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"/Self_Taught/","previous":{"id":"2abf7e9f-90c3-5e1e-81ae-c6284fdd6f6f","fields":{"slug":"/Web_Assembly/"},"frontmatter":{"title":"Web Assembly with Go!"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"path\": \"/Web_Assembly\",\n  \"date\": \"2020-02-17\",\n  \"title\": \"Web Assembly with Go!\",\n  \"tags\": [\"GO\", \"Web Assembly\"],\n  \"excerpt\": \"A quick look at Web Assembly\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://media.giphy.com/media/NmerZ36iBkmKk/giphy.gif\",\n    \"alt\": \"magic\"\n  }))), mdx(\"p\", null, \"I made a demo app using Go compiled to Web Assembly. Check it out the repo: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/dfirebaugh/game-of-life-wasm\"\n  }), \"game of life in go wasm\")), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"/6158a0b30809b32d30a55b7006200e06/game-of-life.gif\",\n    \"alt\": \"game-of-life-gif\"\n  }))), mdx(\"p\", null, \"This stuff is exciting!\"), mdx(\"p\", null, \"I\\u2019ll go over some techincal details about the code first, but feel free to skip ahead to the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#High-Level-on-Web-Assembly\"\n  }), \"High Level on Web Assembly\"), \" section.\"), mdx(\"h2\", null, \"A Look at the code\"), mdx(\"h4\", null, \"life.go\"), mdx(\"p\", null, \"I attempted to keep this file entirely unrelated to the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Introduction\"\n  }), \"DOM\"), \" and Web Assembly. It\\u2019s simply an implementation of game of life. I created an \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://tour.golang.org/methods/9\"\n  }), \"interface\"), \" called a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Renderer\"), \" in hopes that I could eventually create multiple types of renderers (e.g. canvas, terminal, etc\\u2026)\"), mdx(\"p\", null, \"The one implementation of Renderer is \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#dom.go\"\n  }), \"dom.go\"), \".\"), mdx(\"h4\", null, mdx(\"a\", {\n    name: \"dom.go\"\n  }), \"dom.go\"), mdx(\"p\", null, \"This is where the secret sauce is. If you\\u2019re only here to look at some code examples, this is probably where you should look.\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/dfirebaugh/game-of-life-wasm/blob/master/wasm/dom/dom.go\"\n  }), \"https://github.com/dfirebaugh/game-of-life-wasm/blob/master/wasm/dom/dom.go\")), mdx(\"p\", null, \"This file makes heavy use of Go\\u2019s \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#syscall/js\"\n  }), \"syscall/js\"), \" library.\\nThis is how we can \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#Manipulating-the-DOM\"\n  }), \"manipulate the dom\"), \" with Go.\"), mdx(\"h4\", null, \"wasm_exec.js\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"./client/wasm_util/wasm_exec.js\"), \" is provided by Go and can usually be found at\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\\\$(go env GOROOT)/misc/wasm/wasm_exec.js\"), \"\\nThis is kind of the glue code that helps your javascript communicate with Web Assembly modules written in Go.\"), mdx(\"p\", null, \"It would be nice if this packaged as an npm module. This would allow me to install the \\u201Cglue code\\u201D by simply typing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"npm install go-wasm-exec\"), \" or something similar.\"), mdx(\"p\", null, \"One of the challenges with this is that this file ships with Go and it\\u2019s recommended to use the version of that file that corresponds with the Go version that you are using.\"), mdx(\"p\", null, \"I wanted to leave this file unmodified because it was provided by Go.\"), mdx(\"p\", null, \"You\\u2019ll notice several helper functions that make translating between types in wasm and types in JS. Btw, the only types in web assembly are numbers. So, ints and floats\\u2026 There are several functions being imported which are used by go\\u2019s syscall/js package.\"), mdx(\"p\", null, \"This file also handles \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/instantiate\"\n  }), \"loading the wasm file.\"), \" If I decided not to use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"syscall/js\"), \" package from Go, I could have ran this \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"WebAssembly.intantiate()\"), \" function myself and added my own imports. However, I wanted to try to keep things simple for this demo.\"), mdx(\"h4\", null, \"wasm_loader.js\"), mdx(\"p\", null, \"To leave \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"wasm_exec.js\"), \" unmodified, I decided to import \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"wasm_exec.js\"), \" as an \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://hacks.mozilla.org/2018/03/es-modules-a-cartoon-deep-dive/\"\n  }), \"es module\"), \" into a new file \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"wasm_loader.js\"), \".\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"wasm_loader.js\"), \" is a very small file that only loads the wasm file.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-javascript\"\n  }), \"import './wasm_exec.js'\\n \\nconst go = new Go()\\nWebAssembly.instantiateStreaming(fetch('wasm.wasm'), go.importObject)\\n  .then(result => {\\n    go.run(result.instance)\\n  })\\n  .catch(console.error)\\n\")), mdx(\"h4\", null, \"server.go\"), mdx(\"p\", null, \"There\\u2019s nothing special about \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"server.go\"), \". It\\u2019s simply a web server that serves up the client and serves up the wasm file.\"), mdx(\"p\", null, \"Note that the wasm file is being served up with a specific MIME type.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-Go\"\n  }), \"            resp.Header().Set(\\\"content-type\\\", \\\"application/wasm\\\")\\n\")), mdx(\"h4\", null, mdx(\"a\", {\n    name: \"Manipulating-the-DOM\"\n  }), \"Manipulating the DOM\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Document_Object_Model\"\n  }), \"Document Object Model - DOM\")), mdx(\"p\", null, \"Manipulating the DOM with Go actually seemed to be a step backwards. It felt similar to the jquery days. Or rather, it felt like managing the DOM with vanilla JS where you do some query selectors and imparatively make changes as needed. As a JS dev, this was fairly simple to pick up because you are calling the same APIs that javascript has access to.\"), mdx(\"p\", null, \"I found that there were some obvious rendering improvements that I could have made by implementing some lazy rendering or diffing to reduce how many times I wrote to the DOM. For this demo, I felt OK with ignoring these improvements. However, that isn\\u2019t something unique to web assembly. I can see how libraries could make this low effort for us in the future.\"), mdx(\"p\", null, \"I much prefer the declarative nature of something like React/jsx or even standard HTML than having to manually to call \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"createElement\"), \" and similar methods. So, even though I did a lot of DOM manipulation with Go in this app, I can\\u2019t say I recommend it.\"), mdx(\"p\", null, \"Tools like \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://rustwasm.github.io/wasm-bindgen/\"\n  }), \"wasm-bindgen\"), \" make sharing memory/values pretty straight forward, but eventually it will be built into the spec.\"), mdx(\"h4\", null, mdx(\"a\", {\n    name: \"shared-memory\"\n  }), \"Shared Memory\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"The WebAssembly.Memory object has a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/Memory/buffer\"\n  }), \"buffer\"), \" property is a resizable \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer\"\n  }), \"ArrayBuffer\"), \" that holds the raw bytes of memory accessed by a WebAssembly Instance.\\n\\u2014 \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly/Memory\"\n  }), \"MDN\"))), mdx(\"p\", null, \"In my demo, I\\u2019m not accessing this \\u201Cmemory\\u201D directly, but the go package that I\\u2019m using is definitely taking advantage of the shared memory buffer.\"), mdx(\"p\", null, \"I would like to explore more with sharing values to JS so that I can use javascript or a library like react to manage the DOM.\"), mdx(\"h4\", null, mdx(\"a\", {\n    name: \"syscall/js\"\n  }), \"syscall/js\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://golang.org/pkg/syscall/js/\"\n  }), \"syscall/js\"), \" is a package with several functions that help share data between JS and Go. In my demo, I use it mostly for DOM manipulation. Maybe in my next project I\\u2019ll explore more with functions such as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"CopyBytesToJS\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"CopyBytesToGo\"), \" which seems to allow you to directly share values from Go to JS.\"), mdx(\"h4\", null, \"Lessons Learned and Gotchas\"), mdx(\"p\", null, \"I cover this a bit later in \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#Problems-with-Go\"\n  }), \"Problems with Go\")), mdx(\"h2\", null, mdx(\"a\", {\n    name: \"High-Level-on-Web-Assembly\"\n  }), \" High Level on Web Assembly\"), mdx(\"h3\", null, \"What is Web Assembly?\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"WebAssembly (abbreviated Wasm) is a binary instruction format for a stack-based virtual machine. Wasm is designed as a portable target for compilation of high-level languages like C/C++/Rust, enabling deployment on the web for client and server applications\\n\\u2014 \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://webassembly.org/\"\n  }), \"Web Assembly Home Page\"))), mdx(\"p\", null, \"The super high level description is that Web Assembly allows us to write code for the web with languages other than Javascript.\"), mdx(\"p\", null, \"There\\u2019s a bit more to it than that.\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/JavaScript_engine\"\n  }), \"Javascript Engines\"), \"(most notably \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://v8.dev/\"\n  }), \"V8\"), \" on Chrome and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/SpiderMonkey\"\n  }), \"Spider Monkey\"), \" on Firefox ) run on top of a virtual machine in the browser (check out the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#Some-Context-and-a-brief-history-lesson\"\n  }), \"history lesson\"), \" a bit further down). Web Assembly runs on top of this same virtual machine.\"), mdx(\"p\", null, \"The name Web Assembly is a bit of a mislabel because It\\u2019s not quite \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://hacks.mozilla.org/2019/03/standardizing-wasi-a-webassembly-system-interface/\"\n  }), \"Web\"), \" and it\\u2019s not quite \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://stackoverflow.com/questions/1782415/what-is-the-difference-between-assembly-code-and-bytecode\"\n  }), \"Assembly\"), \" (it\\u2019s a bytecode intended to run on a VM \\u2014 assembly usually refers to opcodes compiled to something natively executable by machines). Yes, you can compile to target browsers, but there\\u2019s actually a lot of potential for web assembly running outside the browser. (see further in this writing \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#Web-Assembly-WASI\"\n  }), \"Web Assembly Outside of the Web - WASI\"), \")\"), mdx(\"h3\", null, \"Will it Replace Javascript?\"), mdx(\"p\", null, \"No. Web Assembly is intended to run along side of Javascript. Allowing you to use Javascript for it\\u2019s strengths (expressiveness, ease of use, manipulating DOM nodes) while gaining efficiencies of near native speeds and strong typing of other language (e.g. C, C++, Rust, etc\\u2026)\"), mdx(\"h3\", null, \"Why do you need to be aware of Web Assembly Today?\"), mdx(\"p\", null, \"Web Assembly (or wasm for short) has paradigm shifting potential that will affect how the web works and how we write software. Even if you\\u2019re not actively writing code for Web Assembly, frameworks will be taking advantage of web assembly to optimize for performance.\"), mdx(\"p\", null, \"WASM is being created as an open standard by \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.w3.org/community/webassembly/\"\n  }), \"W3C WebAssembly Community\"), \".\"), mdx(\"p\", null, \"WASM was first announced in 2015, and gained first class \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://blog.mozilla.org/blog/2017/11/13/webassembly-in-browsers/\"\n  }), \"support from all major browsers in 2017\"), \". Web Assembly is out today and it\\u2019s likely that some software (and WebApps) that you use are currently taking advantage of it.\"), mdx(\"p\", null, \"See further \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://webassembly.org/docs/use-cases/\"\n  }), \"use-cases\")), mdx(\"h4\", null, \"Efficient and Fast\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"WebAssembly code can be executed at near-native speed across different platforms by taking advantage of common \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://webassembly.org/docs/portability/#assumptions-for-efficient-execution\"\n  }), \"hardware capabilities\"), \".\\n\\u2014 \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/en-US/docs/WebAssembly/Concepts\"\n  }), \"Mozilla Developer Wiki\"))), mdx(\"p\", null, \"It\\u2019s often said that Web Assembly is fast. \\u201CFast\\u201D is in reference to how fast it is compared to Javascript. These days \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#The-Speed-of-Javascript\"\n  }), \"Javascript is amazingly fast\"), \", but wasm aims to perform at near native speeds.\"), mdx(\"h4\", null, \"Safe\"), mdx(\"p\", null, \"Web Assembly is built for safety. Being that it runs off of the same VM that javascript uses, it\\u2019s sandboxed just as javascript is.\"), mdx(\"p\", null, \"The \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://webassembly.org/docs/security/\"\n  }), \"wasm security model\"), \" ensures that wasm modules can\\u2019t escape the sandbox without going through appropriate APIs.\"), mdx(\"p\", null, \"There are some measures in place to ensure \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://hacks.mozilla.org/2017/07/memory-in-webassembly-and-why-its-safer-than-you-think/\"\n  }), \"memory safety.\"), \" When instantiating a wasm module, a new Javascript object is created which is attached to the wasm instance. Internally, this memory object creates an Array Buffer (\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"#shared-memory\"\n  }), \"mentioned previously.\"), \") Because this is just a JS object, it\\u2019s tracked by the JS garbage collector (even though it\\u2019s contents are not).\"), mdx(\"p\", null, \"Wasm modules are also isolated in memory unless explicitly included in the imported memory object.\"), mdx(\"h4\", null, \"Security White Papers on Web Assembly:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://i.blackhat.com/us-18/Thu-August-9/us-18-Lukasiewicz-WebAssembly-A-New-World-of-Native_Exploits-On-The-Web.pdf\"\n  }), \"Native Exploits\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://i.blackhat.com/us-18/Thu-August-9/us-18-Lukasiewicz-WebAssembly-A-New-World-of-Native_Exploits-On-The-Web-wp.pdf\"\n  }), \"Security Chasms of WASM\"))), mdx(\"p\", null, \"Also note that Web Assembly is disassemblable via tools provided by the Web Assembly team.\\nsee \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/WebAssembly/wabt\"\n  }), \"WABT\")), mdx(\"h2\", null, mdx(\"a\", {\n    name: \"Some-Context-and-a-brief-history-lesson\"\n  }), \"Some Context and a brief history lesson\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://media.giphy.com/media/OeEVCJ2UqMQNO/giphy.gif\",\n    \"alt\": \"90sweb_img\"\n  }))), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://media.giphy.com/media/lORulWik72L7O/giphy.gif\",\n    \"alt\": \"netscape_img\"\n  }))), mdx(\"h3\", null, \"The Speed of Javascript\"), mdx(\"p\", null, \"These days, Javascript is blazing fast. However, this wasn\\u2019t always the case.\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://brendaneich.com/2011/06/new-javascript-engine-module-owner/\"\n  }), \"Javascript was written in ten days.\"), \" Well, the first Javascript Engine Prototype took 10 days. It wasn\\u2019t built for speed. Speed came later when browsers started implementing \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Just-in-time_compilation\"\n  }), \"JIT\"), \" (Just In Time Compilation) compilers in efforts to increase performance.\"), mdx(\"p\", null, \"With any language there are usually tradeoffs. Javascript has a lot of ease of use and expressiveness. This allows for developers to get up and going quickly with it and allows for rapid prototyping of web apps.\"), mdx(\"p\", null, \"The first JIT compilers in major browsers were implemented in 2008. This allowed browsers to increase the speed of javascript code running on the web making js code almost 10 times faster.\"), mdx(\"p\", null, \"Web Assembly runs on top of the same VMs that these JIT compilers run on and Web Assembly will make the web even faster.\"), mdx(\"p\", null, \"A decent demonstration of Web Assembly\\u2019s performance: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://youtu.be/Z6ZhIA8i_8g?t=1565\"\n  }), \"youtube video - WebAssembly \\u2013 To the browser and beyond! | performance.now() 2019\")), mdx(\"h2\", null, \"Programming Web Assembly With Rust\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://pragprog.com/book/khrust/programming-webassembly-with-rust\"\n  }), \"Programming Web Assembly with Rust\"), \" is an excellent book that walks through several projects to help you learn Web Assembly. It starts out by introducing WAT (Web Assembly Text Format) and then later dives into writing Web Assembly with the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.rust-lang.org/\"\n  }), \"Rust\"), \" Programming language.\"), mdx(\"p\", null, \"This is a great book if you like learning by doing and it happens to be a decent intro to Rust.\"), mdx(\"p\", null, \"Alternatively, here is an open source free to read book \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://rustwasm.github.io/book/\"\n  }), \"Rust and Web Assembly\"), \" (Disclaimer - I have not read the \\u201CRust and Web Assembly\\u201D book aside from skimming through a few chapters)\"), mdx(\"h2\", null, \"WAT\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://developer.mozilla.org/en-US/docs/WebAssembly/Understanding_the_text_format\"\n  }), \"WAT\"), \" (Web Assembly Text Format) is what allows Web Assembly to be human readable. It\\u2019s probably not recommended to write an entire app this way. However, it\\u2019s good to know for the purposes of learning how Web Assembly works behind the scenes and can be a useful tool for debugging.\"), mdx(\"p\", null, \"If you\\u2019ve ever programmed in LISP, wat might seem familiar because it uses \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.computerhope.com/jargon/s/s-expression.htm\"\n  }), \"S-Expression\")), mdx(\"p\", null, \"example:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-wat\"\n  }), \"(module\\n  (type (;0;) (func (param i32 i32) (result i32)))\\n  (func (;0;) (type 0) (param i32 i32) (result i32)\\n    local.get 0\\n    local.get 1\\n    i32.add)\\n  (export \\\"add\\\" (func 0)))\\n \\n\")), mdx(\"h2\", null, \"Rust\"), mdx(\"p\", null, \"Rust has been voted \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://insights.stackoverflow.com/survey/2019\"\n  }), \"Stack Overflow\\u2019s most loved language for four years in a row\")), mdx(\"p\", null, \"At the moment, Rust is probably the best language for writing code for Web Assembly. Mostly that there\\u2019s a lot of tooling and support. The Rust team is driving a lot of progress in the Web Assembly arena.\"), mdx(\"p\", null, \"Again, most languages have trade offs. For Rust, it seems to be the difficult learning curve.\"), mdx(\"p\", null, \"Rust seems to be the systems and embedded level programming language of the future.\"), mdx(\"h2\", null, \"Why Go?\"), mdx(\"p\", null, \"I chose to do some experimenting with Web Assembly with Go for a few reasons.\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"It\\u2019s great for enterprise software\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"I know it fairly well.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Simple idiomatic opinionated syntax\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Interesting concurrency patterns\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Closures (not that other languages don\\u2019t have closures)\")), mdx(\"p\", null, \"Perhaps more importantly, we use it a lot at work and I was interested in evaluating how viable Go would be for writing Web Assembly modules.\"), mdx(\"h3\", null, mdx(\"a\", {\n    name: \"Problems-with-Go\"\n  }), \"Problems with Go\"), mdx(\"p\", null, \"Go is intended for writing software (usually) on servers. One of Go\\u2019s tradeoffs is that they didn\\u2019t care a lot about how big the binaries compile to. Therefore, Go binaries are bigger (in comparison to Rust or C). This is because Go runtime is fairly large. Which is nice sometimes, because there are many built-ins in the standard libraries.\"), mdx(\"p\", null, \"It seems that the Go team is actively working on solutions to provide better support for compiling to wasm.\"), mdx(\"h3\", null, \"TinyGo\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://tinygo.org/\"\n  }), \"TinyGo\"), \" is a compiler for Go intended for use on microcontrollers. TinyGo now also supports compiling to Web Assembly. It\\u2019s based on \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://llvm.org/\"\n  }), \"LLVM\")), mdx(\"p\", null, \"Oh TinyGo, I had some hopes for you, but ultimately the most recent standard Go compiler had better support for Web Assembly out of the box.\"), mdx(\"p\", null, \"However, the binaries were a lot smaller. The TinyGo binaries were only a few kilabytes. Whereas the Go binaries were around 2 to 3 megabytes. (note: 2 to 3 megabytes is fairly large to be shipping over http)\"), mdx(\"h3\", null, \"Concurrency?\"), mdx(\"p\", null, \"With the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://interestingengineering.com/no-more-transistors-the-end-of-moores-law\"\n  }), \"breakdown of Moore\\u2019s law\"), \", concurrency will become increasingly important. Transistors won\\u2019t be getting exponentially smaller, but it\\u2019s possible that we lean more on parallelism and concurrency models to increase performance in applications.\"), mdx(\"p\", null, \"Some may say that Go\\u2019s concurrency model is the entire point of Go. Go handles this with the interesting concepts (e.g. \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://golangbot.com/goroutines/\"\n  }), \"goroutines\"), \"(which are \\u201Ckind of\\u201D lightweight threads) and \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://blog.golang.org/pipelines\"\n  }), \"channels\"), \" which are \\u201Ckind of\\u201D similar to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://opensource.com/article/18/8/introduction-pipes-linux\"\n  }), \"named pipes\"), \" or FIFOs in linux)\"), mdx(\"p\", null, \"So, can you do concurrency with Go in web assembly?\"), mdx(\"p\", null, \"Yes, you can!\"), mdx(\"h2\", null, \"Web Assembly, the Future and Beyond\"), mdx(\"p\", null, \"Web Assembly is an Intermediate Representation. It isn\\u2019t targeting a specific machine. It\\u2019s targeting virtual machines which know how to run on specific machines. So, we can run Web Assembly on many types of environments.\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://2r4s9p1yi1fa2jd7j43zph8r-wpengine.netdna-ssl.com/files/2017/02/04-01-langs09.png\",\n    \"alt\": \"web assembly IR - img\"\n  })), \"\\n(image by Lin Clark of \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://code-cartoons.com/https://code-cartoons.com/\"\n  }), \"code cartoons\"), \")\"), mdx(\"h3\", null, mdx(\"a\", {\n    name: \"Web-Assembly-WASI\"\n  }), \"Web Assembly Outside of the Web - WASI\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"WASI is a modular system interface for WebAssembly.\\n\\u2014\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://wasi.dev/\"\n  }), \"wasi.dev\"))), mdx(\"p\", null, \"WASI allows you to run Web Assembly outside of the web on all different OSs.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u2026 it provides a fast, scalable, secure way to run the same code across all machines.\\n\\u2014 \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://hacks.mozilla.org/2019/03/standardizing-wasi-a-webassembly-system-interface/\"\n  }), \"standardizing wasi\"))), mdx(\"h3\", null, \"The Future\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Being that Web Assembly is more efficient, this could lead to lower battery consumption on mobile devices.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Small devices like chromebooks have increased useability.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Javascript libraries will be taking advantage of performance gains by implementing Web Assembly modules behind the scenes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"WASM has a future in serverless \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://blog.cloudflare.com/webassembly-on-cloudflare-workers/\"\n  }), \"cloudflare workers\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"WASM will have a presence on the IOT space\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://hacks.mozilla.org/2018/10/webassemblys-post-mvp-future/\"\n  }), \"Web Assembly roadmap\"))), mdx(\"h3\", null, \"Other Resources\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/mbasso/awesome-wasm\"\n  }), \"Awesome Wasm\"), \" is a github repo with lots of links to Web Assembly resources and Projects.\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.smashingmagazine.com/2017/05/abridged-cartoon-introduction-webassembly/\"\n  }), \"Lin Clark(Mozilla)\"), \" does some excellent talks on web assembly.\"));\n}\n;\nMDXContent.isMDXComponent = true;","fileAbsolutePath":"/home/runner/work/dustinfirebaugh.com/dustinfirebaugh.com/content/blog/Web_Assembly/index.md"},"next":{"id":"b8ba6f79-38cc-5d83-aea5-e5ab125c25b9","fields":{"slug":"/PICO-8/"},"frontmatter":{"title":"PICO-8"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"path\": \"/PICO-8\",\n  \"date\": \"2020-04-29\",\n  \"title\": \"PICO-8\",\n  \"tags\": [\"PICO-8\", \"gamedev\", \"programming\"],\n  \"excerpt\": \"PICO-8 a fantasy console\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Check out the write up I did on my latest little game.\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/project-blog/J46k/\"\n  }), \"j46k\")), mdx(\"h3\", null, \"What is pico-8?\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"PICO-8 is a fantasy console for making, sharing and playing tiny games and other computer programs. It feels like a regular console, but runs on Windows / Mac / Linux. When you turn it on, the machine greets you with a commandline, a suite of cartridge creation tools, and an online cartridge browser called SPLORE.\\n\\u2014 \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.lexaloffle.com/pico-8.php\"\n  }), \"https://www.lexaloffle.com/pico-8.php\"))), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://www.lexaloffle.com/gfx/jelpi_demo.gif\",\n    \"alt\": \"pico-8\"\n  }))), mdx(\"h4\", null, \"Specs\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  })))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Display\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"128x128 16 colours\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Cartridge Size\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"32k\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Sound\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"4 channel chip blerps\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Code\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Lua\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Sprites\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"256 8x8 sprites\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Map\"), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"128x32 cells\")))), mdx(\"h3\", null, \"Why use pico-8?\"), mdx(\"p\", null, \"There\\u2019s some benefit to adding constraints to enable creativity and productivity.  The artificial system specs play that role a bit.\"), mdx(\"p\", null, \"I think pico-8 shines in that it\\u2019s entirely self contained.  Directly in the console you can edit code, draw sprites, draw maps, make sound effects, and compose music.  \"), mdx(\"p\", null, \"You don\\u2019t have to spend much time deciding how big your assets will be (by default they are 8x8 pixel sprites).\"), mdx(\"h3\", null, \"Community\"), mdx(\"p\", null, \"PICO-8 has an active community of game developers.  Most problem that I faced when building my game were easily resolved by doing some google searches (which usually lead me to PICO-8\\u2019s wiki).\"), mdx(\"h3\", null, \"SPLORE\"), mdx(\"p\", null, \"SPLORE is a app that runs on PICO-8.  It allows you to browse games made by others and even jump into their code to see how they are made.\"), mdx(\"p\", null, \"It\\u2019s fun to poke around SPLORE and it might even give you some ideas on what to add to your game.\"), mdx(\"h3\", null, \"Sharing your game with PICO-8\"), mdx(\"p\", null, \"You do have to purchase PICO-8.  It\\u2019s $15 dollars.\"), mdx(\"p\", null, \"However, you can export your game in a way that it runs on a static HTML page.  The people that play your game do not have to purchase a copy of PICO-8.\"), mdx(\"p\", null, \"note: a few people experienced some issues with the controls using an ios device with safari.\"), mdx(\"h3\", null, \"Conclusion\"), mdx(\"p\", null, \"I think pico-8 could be a great platform to make quick games (possibly for game jams).  If you\\u2019re looking to make a large game, it might be better to use some other platform/framework.\"), mdx(\"p\", null, \"It\\u2019s fun.\"));\n}\n;\nMDXContent.isMDXComponent = true;","fileAbsolutePath":"/home/runner/work/dustinfirebaugh.com/dustinfirebaugh.com/content/blog/PICO-8/index.md"}}},"staticQueryHashes":["3128451518","4211413508"]}